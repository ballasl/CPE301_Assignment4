
CPE301_Assignment04_partc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000c1e  00000cb2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c1e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008e  0080011e  0080011e  00000cd0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cd0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d2c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000864  00000000  00000000  00000dac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000708  00000000  00000000  00001610  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a9  00000000  00000000  00001d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000009c  00000000  00000000  000020c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000043c  00000000  00000000  00002160  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ff  00000000  00000000  0000259c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  0000269b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e1       	ldi	r30, 0x1E	; 30
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 31       	cpi	r26, 0x1E	; 30
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e1       	ldi	r26, 0x1E	; 30
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 3a       	cpi	r26, 0xAC	; 172
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 9a 00 	call	0x134	; 0x134 <main>
  9e:	0c 94 0d 06 	jmp	0xc1a	; 0xc1a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:
float temp;
#endif

void adc_init(void)
{
	ADMUX = 0; // use ADC0
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	10 82       	st	Z, r1
	ADMUX |= (1 << REFS0); // use AVcc as the reference. Input will be right justified
  ac:	80 81       	ld	r24, Z
  ae:	80 64       	ori	r24, 0x40	; 64
  b0:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // 128 pre-scale for 16Mhz
  b2:	ea e7       	ldi	r30, 0x7A	; 122
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	87 60       	ori	r24, 0x07	; 7
  ba:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN); // Enable the ADC
  bc:	80 81       	ld	r24, Z
  be:	80 68       	ori	r24, 0x80	; 128
  c0:	80 83       	st	Z, r24
	
	ADCSRB = 0; // 0 for free running mode
  c2:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
  c6:	08 95       	ret

000000c8 <usart_init>:
    }
}
#ifdef ISDEBUGGING
void usart_init()
{
	UBRR0H = (MYUBRR) >> 8;
  c8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = MYUBRR;
  cc:	87 e6       	ldi	r24, 0x67	; 103
  ce:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0); // Enable receiver and transmitter
  d2:	e1 ec       	ldi	r30, 0xC1	; 193
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	88 61       	ori	r24, 0x18	; 24
  da:	80 83       	st	Z, r24
	UCSR0B |= (1 << RXCIE0); // Enable receiver interrupt
  dc:	80 81       	ld	r24, Z
  de:	80 68       	ori	r24, 0x80	; 128
  e0:	80 83       	st	Z, r24
	UCSR0C |=  (1 << UCSZ01) | (1 << UCSZ00); // Set frame: 8data, 1 stop
  e2:	e2 ec       	ldi	r30, 0xC2	; 194
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	80 81       	ld	r24, Z
  e8:	86 60       	ori	r24, 0x06	; 6
  ea:	80 83       	st	Z, r24
	sei();
  ec:	78 94       	sei
  ee:	08 95       	ret

000000f0 <__vector_18>:
}

ISR (USART_RX_vect)
{
  f0:	1f 92       	push	r1
  f2:	0f 92       	push	r0
  f4:	0f b6       	in	r0, 0x3f	; 63
  f6:	0f 92       	push	r0
  f8:	11 24       	eor	r1, r1
  fa:	8f 93       	push	r24
  fc:	ef 93       	push	r30
  fe:	ff 93       	push	r31
	ReceivedChar = UDR0; // Read data from the RX buffer
 100:	e6 ec       	ldi	r30, 0xC6	; 198
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <ReceivedChar>
	
	UDR0 = ReceivedChar; // Write the data to the TX buffer
 10a:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <ReceivedChar>
 10e:	80 83       	st	Z, r24
}
 110:	ff 91       	pop	r31
 112:	ef 91       	pop	r30
 114:	8f 91       	pop	r24
 116:	0f 90       	pop	r0
 118:	0f be       	out	0x3f, r0	; 63
 11a:	0f 90       	pop	r0
 11c:	1f 90       	pop	r1
 11e:	18 95       	reti

00000120 <USART0SendByte>:

int USART0SendByte(char u8Data)
{
	//wait while previous byte is completed
	while(!(UCSR0A&(1<<UDRE0))){};
 120:	e0 ec       	ldi	r30, 0xC0	; 192
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	90 81       	ld	r25, Z
 126:	95 ff       	sbrs	r25, 5
 128:	fd cf       	rjmp	.-6      	; 0x124 <USART0SendByte+0x4>
	// Transmit data
	//UDR0 = u8Data;
	UDR0=u8Data;
 12a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
 12e:	80 e0       	ldi	r24, 0x00	; 0
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	08 95       	ret

00000134 <main>:
	ADCSRB = 0; // 0 for free running mode
}

int main(void)
{
	adc_init();
 134:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
	#ifdef ISDEBUGGING
	usart_init();
 138:	0e 94 64 00 	call	0xc8	; 0xc8 <usart_init>
	#endif

    DDRB |= (1<<DDB1); // Set  pin PB1 on Atmega328P Xplainedmini as output
 13c:	21 9a       	sbi	0x04, 1	; 4
	// DDRB |= (1<<DDB0); // Set  pin PB1 on Atmega328P Xplainedmini as output
	// Timer1 setup:
	//COM1A1/COM1B1 = None-inverted mode (HIGH at bottom, LOW on match), WGM11=Fast PWM
	TCCR1A|=(1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);
 13e:	e0 e8       	ldi	r30, 0x80	; 128
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	82 6a       	ori	r24, 0xA2	; 162
 146:	80 83       	st	Z, r24
	//TCCR1A|=(1<<COM1A1)|(1<<COM1B0)|(1<<WGM11);
	// WGM12 & WGM13=Fast PWM, Prescaler=64
	TCCR1B|=(1<<WGM13)|(1<<WGM12)|(1<<CS11)|(1<<CS10);
 148:	e1 e8       	ldi	r30, 0x81	; 129
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	8b 61       	ori	r24, 0x1B	; 27
 150:	80 83       	st	Z, r24
	// Set ICR1 register = PWM period
	ICR1 = TOP; //Period = 20 ms 
 152:	87 e8       	ldi	r24, 0x87	; 135
 154:	93 e1       	ldi	r25, 0x13	; 19
 156:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 15a:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>

    while (1) 
    {
		ADCSRA |= (1 << ADSC); // Start the ADC conversion
 15e:	ca e7       	ldi	r28, 0x7A	; 122
 160:	d0 e0       	ldi	r29, 0x00	; 0
		//while ((ADCSRA & (1<<ADIF))==0);
		while(	ADCSRA	&	(1<<ADSC)	); 
		adc_value=ADCL;
 162:	0f 2e       	mov	r0, r31
 164:	f8 e7       	ldi	r31, 0x78	; 120
 166:	cf 2e       	mov	r12, r31
 168:	d1 2c       	mov	r13, r1
 16a:	f0 2d       	mov	r31, r0
		adc_value = (ADCH<<8) + adc_value;
 16c:	0f 2e       	mov	r0, r31
 16e:	f9 e7       	ldi	r31, 0x79	; 121
 170:	6f 2e       	mov	r6, r31
 172:	71 2c       	mov	r7, r1
 174:	f0 2d       	mov	r31, r0
	
		unsigned long pulse = PULSE_MIN+(double)adc_value*(PULSE_MAX-PULSE_MIN)/1024;
		unsigned long ocr_value=(double)pulse * 16/64 -1;

		#ifdef ISDEBUGGING
			sprintf(printBuffer, "adc_value=%d ocr_value is %d\n", (int)adc_value, (int)ocr_value);
 176:	0f 2e       	mov	r0, r31
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	4f 2e       	mov	r4, r31
 17c:	f1 e0       	ldi	r31, 0x01	; 1
 17e:	5f 2e       	mov	r5, r31
 180:	f0 2d       	mov	r31, r0
 182:	0f 2e       	mov	r0, r31
 184:	fb e2       	ldi	r31, 0x2B	; 43
 186:	ef 2e       	mov	r14, r31
 188:	f1 e0       	ldi	r31, 0x01	; 1
 18a:	ff 2e       	mov	r15, r31
 18c:	f0 2d       	mov	r31, r0
			int thesize=strlen(printBuffer);
			for (uint8_t i=0; i<thesize;i++)
 18e:	21 2c       	mov	r2, r1
	// Set ICR1 register = PWM period
	ICR1 = TOP; //Period = 20 ms 

    while (1) 
    {
		ADCSRA |= (1 << ADSC); // Start the ADC conversion
 190:	88 81       	ld	r24, Y
 192:	80 64       	ori	r24, 0x40	; 64
 194:	88 83       	st	Y, r24
		//while ((ADCSRA & (1<<ADIF))==0);
		while(	ADCSRA	&	(1<<ADSC)	); 
 196:	88 81       	ld	r24, Y
 198:	86 fd       	sbrc	r24, 6
 19a:	fd cf       	rjmp	.-6      	; 0x196 <main+0x62>
		adc_value=ADCL;
 19c:	f6 01       	movw	r30, r12
 19e:	80 81       	ld	r24, Z
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	a0 e0       	ldi	r26, 0x00	; 0
 1a4:	b0 e0       	ldi	r27, 0x00	; 0
 1a6:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <adc_value>
 1aa:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <adc_value+0x1>
 1ae:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <adc_value+0x2>
 1b2:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <adc_value+0x3>
		adc_value = (ADCH<<8) + adc_value;
 1b6:	f3 01       	movw	r30, r6
 1b8:	20 81       	ld	r18, Z
 1ba:	40 91 22 01 	lds	r20, 0x0122	; 0x800122 <adc_value>
 1be:	50 91 23 01 	lds	r21, 0x0123	; 0x800123 <adc_value+0x1>
 1c2:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <adc_value+0x2>
 1c6:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <adc_value+0x3>
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	32 2f       	mov	r19, r18
 1ce:	22 27       	eor	r18, r18
 1d0:	c9 01       	movw	r24, r18
 1d2:	33 0f       	add	r19, r19
 1d4:	aa 0b       	sbc	r26, r26
 1d6:	bb 0b       	sbc	r27, r27
 1d8:	84 0f       	add	r24, r20
 1da:	95 1f       	adc	r25, r21
 1dc:	a6 1f       	adc	r26, r22
 1de:	b7 1f       	adc	r27, r23
 1e0:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <adc_value>
 1e4:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <adc_value+0x1>
 1e8:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <adc_value+0x2>
 1ec:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <adc_value+0x3>
	
		unsigned long pulse = PULSE_MIN+(double)adc_value*(PULSE_MAX-PULSE_MIN)/1024;
 1f0:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <adc_value>
 1f4:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <adc_value+0x1>
 1f8:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <adc_value+0x2>
 1fc:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <adc_value+0x3>
		unsigned long ocr_value=(double)pulse * 16/64 -1;
 200:	0e 94 28 02 	call	0x450	; 0x450 <__floatunsisf>
 204:	20 e0       	ldi	r18, 0x00	; 0
 206:	30 e0       	ldi	r19, 0x00	; 0
 208:	4f ec       	ldi	r20, 0xCF	; 207
 20a:	54 e4       	ldi	r21, 0x44	; 68
 20c:	0e 94 b6 02 	call	0x56c	; 0x56c <__mulsf3>
 210:	20 e0       	ldi	r18, 0x00	; 0
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	40 e8       	ldi	r20, 0x80	; 128
 216:	5a e3       	ldi	r21, 0x3A	; 58
 218:	0e 94 b6 02 	call	0x56c	; 0x56c <__mulsf3>
 21c:	20 e0       	ldi	r18, 0x00	; 0
 21e:	30 e0       	ldi	r19, 0x00	; 0
 220:	48 e0       	ldi	r20, 0x08	; 8
 222:	54 e4       	ldi	r21, 0x44	; 68
 224:	0e 94 8d 01 	call	0x31a	; 0x31a <__addsf3>
 228:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__fixunssfsi>
 22c:	0e 94 28 02 	call	0x450	; 0x450 <__floatunsisf>
 230:	20 e0       	ldi	r18, 0x00	; 0
 232:	30 e0       	ldi	r19, 0x00	; 0
 234:	40 e8       	ldi	r20, 0x80	; 128
 236:	51 e4       	ldi	r21, 0x41	; 65
 238:	0e 94 b6 02 	call	0x56c	; 0x56c <__mulsf3>
 23c:	20 e0       	ldi	r18, 0x00	; 0
 23e:	30 e0       	ldi	r19, 0x00	; 0
 240:	40 e8       	ldi	r20, 0x80	; 128
 242:	5c e3       	ldi	r21, 0x3C	; 60
 244:	0e 94 b6 02 	call	0x56c	; 0x56c <__mulsf3>
 248:	20 e0       	ldi	r18, 0x00	; 0
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	40 e8       	ldi	r20, 0x80	; 128
 24e:	5f e3       	ldi	r21, 0x3F	; 63
 250:	0e 94 8c 01 	call	0x318	; 0x318 <__subsf3>
 254:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__fixunssfsi>
 258:	4b 01       	movw	r8, r22
 25a:	5c 01       	movw	r10, r24

		#ifdef ISDEBUGGING
			sprintf(printBuffer, "adc_value=%d ocr_value is %d\n", (int)adc_value, (int)ocr_value);
 25c:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <adc_value>
 260:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <adc_value+0x1>
 264:	a0 91 24 01 	lds	r26, 0x0124	; 0x800124 <adc_value+0x2>
 268:	b0 91 25 01 	lds	r27, 0x0125	; 0x800125 <adc_value+0x3>
 26c:	9f 92       	push	r9
 26e:	8f 92       	push	r8
 270:	9f 93       	push	r25
 272:	8f 93       	push	r24
 274:	5f 92       	push	r5
 276:	4f 92       	push	r4
 278:	ff 92       	push	r15
 27a:	ef 92       	push	r14
 27c:	0e 94 23 03 	call	0x646	; 0x646 <sprintf>
			int thesize=strlen(printBuffer);
 280:	f7 01       	movw	r30, r14
 282:	01 90       	ld	r0, Z+
 284:	00 20       	and	r0, r0
 286:	e9 f7       	brne	.-6      	; 0x282 <main+0x14e>
 288:	31 97       	sbiw	r30, 0x01	; 1
 28a:	8f 01       	movw	r16, r30
 28c:	0b 52       	subi	r16, 0x2B	; 43
 28e:	11 40       	sbci	r17, 0x01	; 1
			for (uint8_t i=0; i<thesize;i++)
 290:	8d b7       	in	r24, 0x3d	; 61
 292:	9e b7       	in	r25, 0x3e	; 62
 294:	08 96       	adiw	r24, 0x08	; 8
 296:	0f b6       	in	r0, 0x3f	; 63
 298:	f8 94       	cli
 29a:	9e bf       	out	0x3e, r25	; 62
 29c:	0f be       	out	0x3f, r0	; 63
 29e:	8d bf       	out	0x3d, r24	; 61
 2a0:	10 16       	cp	r1, r16
 2a2:	11 06       	cpc	r1, r17
 2a4:	7c f4       	brge	.+30     	; 0x2c4 <main+0x190>
 2a6:	82 2d       	mov	r24, r2
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	31 2c       	mov	r3, r1
			{
				USART0SendByte(printBuffer[i]);
 2ac:	fc 01       	movw	r30, r24
 2ae:	e5 5d       	subi	r30, 0xD5	; 213
 2b0:	fe 4f       	sbci	r31, 0xFE	; 254
 2b2:	80 81       	ld	r24, Z
 2b4:	0e 94 90 00 	call	0x120	; 0x120 <USART0SendByte>
		unsigned long ocr_value=(double)pulse * 16/64 -1;

		#ifdef ISDEBUGGING
			sprintf(printBuffer, "adc_value=%d ocr_value is %d\n", (int)adc_value, (int)ocr_value);
			int thesize=strlen(printBuffer);
			for (uint8_t i=0; i<thesize;i++)
 2b8:	33 94       	inc	r3
 2ba:	83 2d       	mov	r24, r3
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	80 17       	cp	r24, r16
 2c0:	91 07       	cpc	r25, r17
 2c2:	a4 f3       	brlt	.-24     	; 0x2ac <main+0x178>
			{
				USART0SendByte(printBuffer[i]);
			}
		#endif
		if (abs(ocr_value-old_ocr_value)>1)
 2c4:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 2c8:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
 2cc:	a0 91 20 01 	lds	r26, 0x0120	; 0x800120 <__data_end+0x2>
 2d0:	b0 91 21 01 	lds	r27, 0x0121	; 0x800121 <__data_end+0x3>
 2d4:	94 01       	movw	r18, r8
 2d6:	28 1b       	sub	r18, r24
 2d8:	39 0b       	sbc	r19, r25
 2da:	c9 01       	movw	r24, r18
 2dc:	99 23       	and	r25, r25
 2de:	24 f4       	brge	.+8      	; 0x2e8 <main+0x1b4>
 2e0:	88 27       	eor	r24, r24
 2e2:	99 27       	eor	r25, r25
 2e4:	82 1b       	sub	r24, r18
 2e6:	93 0b       	sbc	r25, r19
 2e8:	02 97       	sbiw	r24, 0x02	; 2
 2ea:	64 f0       	brlt	.+24     	; 0x304 <main+0x1d0>
		{
			old_ocr_value=ocr_value;
 2ec:	80 92 1e 01 	sts	0x011E, r8	; 0x80011e <__data_end>
 2f0:	90 92 1f 01 	sts	0x011F, r9	; 0x80011f <__data_end+0x1>
 2f4:	a0 92 20 01 	sts	0x0120, r10	; 0x800120 <__data_end+0x2>
 2f8:	b0 92 21 01 	sts	0x0121, r11	; 0x800121 <__data_end+0x3>
			OCR1A = ocr_value;
 2fc:	e8 e8       	ldi	r30, 0x88	; 136
 2fe:	f0 e0       	ldi	r31, 0x00	; 0
 300:	91 82       	std	Z+1, r9	; 0x01
 302:	80 82       	st	Z, r8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 304:	ff ef       	ldi	r31, 0xFF	; 255
 306:	23 ed       	ldi	r18, 0xD3	; 211
 308:	80 e3       	ldi	r24, 0x30	; 48
 30a:	f1 50       	subi	r31, 0x01	; 1
 30c:	20 40       	sbci	r18, 0x00	; 0
 30e:	80 40       	sbci	r24, 0x00	; 0
 310:	e1 f7       	brne	.-8      	; 0x30a <main+0x1d6>
 312:	00 c0       	rjmp	.+0      	; 0x314 <main+0x1e0>
 314:	00 00       	nop
 316:	3c cf       	rjmp	.-392    	; 0x190 <main+0x5c>

00000318 <__subsf3>:
 318:	50 58       	subi	r21, 0x80	; 128

0000031a <__addsf3>:
 31a:	bb 27       	eor	r27, r27
 31c:	aa 27       	eor	r26, r26
 31e:	0e 94 a4 01 	call	0x348	; 0x348 <__addsf3x>
 322:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__fp_round>
 326:	0e 94 6e 02 	call	0x4dc	; 0x4dc <__fp_pscA>
 32a:	38 f0       	brcs	.+14     	; 0x33a <__addsf3+0x20>
 32c:	0e 94 75 02 	call	0x4ea	; 0x4ea <__fp_pscB>
 330:	20 f0       	brcs	.+8      	; 0x33a <__addsf3+0x20>
 332:	39 f4       	brne	.+14     	; 0x342 <__addsf3+0x28>
 334:	9f 3f       	cpi	r25, 0xFF	; 255
 336:	19 f4       	brne	.+6      	; 0x33e <__addsf3+0x24>
 338:	26 f4       	brtc	.+8      	; 0x342 <__addsf3+0x28>
 33a:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <__fp_nan>
 33e:	0e f4       	brtc	.+2      	; 0x342 <__addsf3+0x28>
 340:	e0 95       	com	r30
 342:	e7 fb       	bst	r30, 7
 344:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__fp_inf>

00000348 <__addsf3x>:
 348:	e9 2f       	mov	r30, r25
 34a:	0e 94 8d 02 	call	0x51a	; 0x51a <__fp_split3>
 34e:	58 f3       	brcs	.-42     	; 0x326 <__addsf3+0xc>
 350:	ba 17       	cp	r27, r26
 352:	62 07       	cpc	r22, r18
 354:	73 07       	cpc	r23, r19
 356:	84 07       	cpc	r24, r20
 358:	95 07       	cpc	r25, r21
 35a:	20 f0       	brcs	.+8      	; 0x364 <__addsf3x+0x1c>
 35c:	79 f4       	brne	.+30     	; 0x37c <__addsf3x+0x34>
 35e:	a6 f5       	brtc	.+104    	; 0x3c8 <__addsf3x+0x80>
 360:	0c 94 af 02 	jmp	0x55e	; 0x55e <__fp_zero>
 364:	0e f4       	brtc	.+2      	; 0x368 <__addsf3x+0x20>
 366:	e0 95       	com	r30
 368:	0b 2e       	mov	r0, r27
 36a:	ba 2f       	mov	r27, r26
 36c:	a0 2d       	mov	r26, r0
 36e:	0b 01       	movw	r0, r22
 370:	b9 01       	movw	r22, r18
 372:	90 01       	movw	r18, r0
 374:	0c 01       	movw	r0, r24
 376:	ca 01       	movw	r24, r20
 378:	a0 01       	movw	r20, r0
 37a:	11 24       	eor	r1, r1
 37c:	ff 27       	eor	r31, r31
 37e:	59 1b       	sub	r21, r25
 380:	99 f0       	breq	.+38     	; 0x3a8 <__addsf3x+0x60>
 382:	59 3f       	cpi	r21, 0xF9	; 249
 384:	50 f4       	brcc	.+20     	; 0x39a <__addsf3x+0x52>
 386:	50 3e       	cpi	r21, 0xE0	; 224
 388:	68 f1       	brcs	.+90     	; 0x3e4 <__addsf3x+0x9c>
 38a:	1a 16       	cp	r1, r26
 38c:	f0 40       	sbci	r31, 0x00	; 0
 38e:	a2 2f       	mov	r26, r18
 390:	23 2f       	mov	r18, r19
 392:	34 2f       	mov	r19, r20
 394:	44 27       	eor	r20, r20
 396:	58 5f       	subi	r21, 0xF8	; 248
 398:	f3 cf       	rjmp	.-26     	; 0x380 <__addsf3x+0x38>
 39a:	46 95       	lsr	r20
 39c:	37 95       	ror	r19
 39e:	27 95       	ror	r18
 3a0:	a7 95       	ror	r26
 3a2:	f0 40       	sbci	r31, 0x00	; 0
 3a4:	53 95       	inc	r21
 3a6:	c9 f7       	brne	.-14     	; 0x39a <__addsf3x+0x52>
 3a8:	7e f4       	brtc	.+30     	; 0x3c8 <__addsf3x+0x80>
 3aa:	1f 16       	cp	r1, r31
 3ac:	ba 0b       	sbc	r27, r26
 3ae:	62 0b       	sbc	r22, r18
 3b0:	73 0b       	sbc	r23, r19
 3b2:	84 0b       	sbc	r24, r20
 3b4:	ba f0       	brmi	.+46     	; 0x3e4 <__addsf3x+0x9c>
 3b6:	91 50       	subi	r25, 0x01	; 1
 3b8:	a1 f0       	breq	.+40     	; 0x3e2 <__addsf3x+0x9a>
 3ba:	ff 0f       	add	r31, r31
 3bc:	bb 1f       	adc	r27, r27
 3be:	66 1f       	adc	r22, r22
 3c0:	77 1f       	adc	r23, r23
 3c2:	88 1f       	adc	r24, r24
 3c4:	c2 f7       	brpl	.-16     	; 0x3b6 <__addsf3x+0x6e>
 3c6:	0e c0       	rjmp	.+28     	; 0x3e4 <__addsf3x+0x9c>
 3c8:	ba 0f       	add	r27, r26
 3ca:	62 1f       	adc	r22, r18
 3cc:	73 1f       	adc	r23, r19
 3ce:	84 1f       	adc	r24, r20
 3d0:	48 f4       	brcc	.+18     	; 0x3e4 <__addsf3x+0x9c>
 3d2:	87 95       	ror	r24
 3d4:	77 95       	ror	r23
 3d6:	67 95       	ror	r22
 3d8:	b7 95       	ror	r27
 3da:	f7 95       	ror	r31
 3dc:	9e 3f       	cpi	r25, 0xFE	; 254
 3de:	08 f0       	brcs	.+2      	; 0x3e2 <__addsf3x+0x9a>
 3e0:	b0 cf       	rjmp	.-160    	; 0x342 <__addsf3+0x28>
 3e2:	93 95       	inc	r25
 3e4:	88 0f       	add	r24, r24
 3e6:	08 f0       	brcs	.+2      	; 0x3ea <__addsf3x+0xa2>
 3e8:	99 27       	eor	r25, r25
 3ea:	ee 0f       	add	r30, r30
 3ec:	97 95       	ror	r25
 3ee:	87 95       	ror	r24
 3f0:	08 95       	ret

000003f2 <__fixunssfsi>:
 3f2:	0e 94 95 02 	call	0x52a	; 0x52a <__fp_splitA>
 3f6:	88 f0       	brcs	.+34     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3f8:	9f 57       	subi	r25, 0x7F	; 127
 3fa:	98 f0       	brcs	.+38     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3fc:	b9 2f       	mov	r27, r25
 3fe:	99 27       	eor	r25, r25
 400:	b7 51       	subi	r27, 0x17	; 23
 402:	b0 f0       	brcs	.+44     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 404:	e1 f0       	breq	.+56     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 406:	66 0f       	add	r22, r22
 408:	77 1f       	adc	r23, r23
 40a:	88 1f       	adc	r24, r24
 40c:	99 1f       	adc	r25, r25
 40e:	1a f0       	brmi	.+6      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 410:	ba 95       	dec	r27
 412:	c9 f7       	brne	.-14     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 414:	14 c0       	rjmp	.+40     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 416:	b1 30       	cpi	r27, 0x01	; 1
 418:	91 f0       	breq	.+36     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 41a:	0e 94 af 02 	call	0x55e	; 0x55e <__fp_zero>
 41e:	b1 e0       	ldi	r27, 0x01	; 1
 420:	08 95       	ret
 422:	0c 94 af 02 	jmp	0x55e	; 0x55e <__fp_zero>
 426:	67 2f       	mov	r22, r23
 428:	78 2f       	mov	r23, r24
 42a:	88 27       	eor	r24, r24
 42c:	b8 5f       	subi	r27, 0xF8	; 248
 42e:	39 f0       	breq	.+14     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 430:	b9 3f       	cpi	r27, 0xF9	; 249
 432:	cc f3       	brlt	.-14     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 434:	86 95       	lsr	r24
 436:	77 95       	ror	r23
 438:	67 95       	ror	r22
 43a:	b3 95       	inc	r27
 43c:	d9 f7       	brne	.-10     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 43e:	3e f4       	brtc	.+14     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 440:	90 95       	com	r25
 442:	80 95       	com	r24
 444:	70 95       	com	r23
 446:	61 95       	neg	r22
 448:	7f 4f       	sbci	r23, 0xFF	; 255
 44a:	8f 4f       	sbci	r24, 0xFF	; 255
 44c:	9f 4f       	sbci	r25, 0xFF	; 255
 44e:	08 95       	ret

00000450 <__floatunsisf>:
 450:	e8 94       	clt
 452:	09 c0       	rjmp	.+18     	; 0x466 <__floatsisf+0x12>

00000454 <__floatsisf>:
 454:	97 fb       	bst	r25, 7
 456:	3e f4       	brtc	.+14     	; 0x466 <__floatsisf+0x12>
 458:	90 95       	com	r25
 45a:	80 95       	com	r24
 45c:	70 95       	com	r23
 45e:	61 95       	neg	r22
 460:	7f 4f       	sbci	r23, 0xFF	; 255
 462:	8f 4f       	sbci	r24, 0xFF	; 255
 464:	9f 4f       	sbci	r25, 0xFF	; 255
 466:	99 23       	and	r25, r25
 468:	a9 f0       	breq	.+42     	; 0x494 <__floatsisf+0x40>
 46a:	f9 2f       	mov	r31, r25
 46c:	96 e9       	ldi	r25, 0x96	; 150
 46e:	bb 27       	eor	r27, r27
 470:	93 95       	inc	r25
 472:	f6 95       	lsr	r31
 474:	87 95       	ror	r24
 476:	77 95       	ror	r23
 478:	67 95       	ror	r22
 47a:	b7 95       	ror	r27
 47c:	f1 11       	cpse	r31, r1
 47e:	f8 cf       	rjmp	.-16     	; 0x470 <__floatsisf+0x1c>
 480:	fa f4       	brpl	.+62     	; 0x4c0 <__floatsisf+0x6c>
 482:	bb 0f       	add	r27, r27
 484:	11 f4       	brne	.+4      	; 0x48a <__floatsisf+0x36>
 486:	60 ff       	sbrs	r22, 0
 488:	1b c0       	rjmp	.+54     	; 0x4c0 <__floatsisf+0x6c>
 48a:	6f 5f       	subi	r22, 0xFF	; 255
 48c:	7f 4f       	sbci	r23, 0xFF	; 255
 48e:	8f 4f       	sbci	r24, 0xFF	; 255
 490:	9f 4f       	sbci	r25, 0xFF	; 255
 492:	16 c0       	rjmp	.+44     	; 0x4c0 <__floatsisf+0x6c>
 494:	88 23       	and	r24, r24
 496:	11 f0       	breq	.+4      	; 0x49c <__floatsisf+0x48>
 498:	96 e9       	ldi	r25, 0x96	; 150
 49a:	11 c0       	rjmp	.+34     	; 0x4be <__floatsisf+0x6a>
 49c:	77 23       	and	r23, r23
 49e:	21 f0       	breq	.+8      	; 0x4a8 <__floatsisf+0x54>
 4a0:	9e e8       	ldi	r25, 0x8E	; 142
 4a2:	87 2f       	mov	r24, r23
 4a4:	76 2f       	mov	r23, r22
 4a6:	05 c0       	rjmp	.+10     	; 0x4b2 <__floatsisf+0x5e>
 4a8:	66 23       	and	r22, r22
 4aa:	71 f0       	breq	.+28     	; 0x4c8 <__floatsisf+0x74>
 4ac:	96 e8       	ldi	r25, 0x86	; 134
 4ae:	86 2f       	mov	r24, r22
 4b0:	70 e0       	ldi	r23, 0x00	; 0
 4b2:	60 e0       	ldi	r22, 0x00	; 0
 4b4:	2a f0       	brmi	.+10     	; 0x4c0 <__floatsisf+0x6c>
 4b6:	9a 95       	dec	r25
 4b8:	66 0f       	add	r22, r22
 4ba:	77 1f       	adc	r23, r23
 4bc:	88 1f       	adc	r24, r24
 4be:	da f7       	brpl	.-10     	; 0x4b6 <__floatsisf+0x62>
 4c0:	88 0f       	add	r24, r24
 4c2:	96 95       	lsr	r25
 4c4:	87 95       	ror	r24
 4c6:	97 f9       	bld	r25, 7
 4c8:	08 95       	ret

000004ca <__fp_inf>:
 4ca:	97 f9       	bld	r25, 7
 4cc:	9f 67       	ori	r25, 0x7F	; 127
 4ce:	80 e8       	ldi	r24, 0x80	; 128
 4d0:	70 e0       	ldi	r23, 0x00	; 0
 4d2:	60 e0       	ldi	r22, 0x00	; 0
 4d4:	08 95       	ret

000004d6 <__fp_nan>:
 4d6:	9f ef       	ldi	r25, 0xFF	; 255
 4d8:	80 ec       	ldi	r24, 0xC0	; 192
 4da:	08 95       	ret

000004dc <__fp_pscA>:
 4dc:	00 24       	eor	r0, r0
 4de:	0a 94       	dec	r0
 4e0:	16 16       	cp	r1, r22
 4e2:	17 06       	cpc	r1, r23
 4e4:	18 06       	cpc	r1, r24
 4e6:	09 06       	cpc	r0, r25
 4e8:	08 95       	ret

000004ea <__fp_pscB>:
 4ea:	00 24       	eor	r0, r0
 4ec:	0a 94       	dec	r0
 4ee:	12 16       	cp	r1, r18
 4f0:	13 06       	cpc	r1, r19
 4f2:	14 06       	cpc	r1, r20
 4f4:	05 06       	cpc	r0, r21
 4f6:	08 95       	ret

000004f8 <__fp_round>:
 4f8:	09 2e       	mov	r0, r25
 4fa:	03 94       	inc	r0
 4fc:	00 0c       	add	r0, r0
 4fe:	11 f4       	brne	.+4      	; 0x504 <__fp_round+0xc>
 500:	88 23       	and	r24, r24
 502:	52 f0       	brmi	.+20     	; 0x518 <__fp_round+0x20>
 504:	bb 0f       	add	r27, r27
 506:	40 f4       	brcc	.+16     	; 0x518 <__fp_round+0x20>
 508:	bf 2b       	or	r27, r31
 50a:	11 f4       	brne	.+4      	; 0x510 <__fp_round+0x18>
 50c:	60 ff       	sbrs	r22, 0
 50e:	04 c0       	rjmp	.+8      	; 0x518 <__fp_round+0x20>
 510:	6f 5f       	subi	r22, 0xFF	; 255
 512:	7f 4f       	sbci	r23, 0xFF	; 255
 514:	8f 4f       	sbci	r24, 0xFF	; 255
 516:	9f 4f       	sbci	r25, 0xFF	; 255
 518:	08 95       	ret

0000051a <__fp_split3>:
 51a:	57 fd       	sbrc	r21, 7
 51c:	90 58       	subi	r25, 0x80	; 128
 51e:	44 0f       	add	r20, r20
 520:	55 1f       	adc	r21, r21
 522:	59 f0       	breq	.+22     	; 0x53a <__fp_splitA+0x10>
 524:	5f 3f       	cpi	r21, 0xFF	; 255
 526:	71 f0       	breq	.+28     	; 0x544 <__fp_splitA+0x1a>
 528:	47 95       	ror	r20

0000052a <__fp_splitA>:
 52a:	88 0f       	add	r24, r24
 52c:	97 fb       	bst	r25, 7
 52e:	99 1f       	adc	r25, r25
 530:	61 f0       	breq	.+24     	; 0x54a <__fp_splitA+0x20>
 532:	9f 3f       	cpi	r25, 0xFF	; 255
 534:	79 f0       	breq	.+30     	; 0x554 <__fp_splitA+0x2a>
 536:	87 95       	ror	r24
 538:	08 95       	ret
 53a:	12 16       	cp	r1, r18
 53c:	13 06       	cpc	r1, r19
 53e:	14 06       	cpc	r1, r20
 540:	55 1f       	adc	r21, r21
 542:	f2 cf       	rjmp	.-28     	; 0x528 <__fp_split3+0xe>
 544:	46 95       	lsr	r20
 546:	f1 df       	rcall	.-30     	; 0x52a <__fp_splitA>
 548:	08 c0       	rjmp	.+16     	; 0x55a <__fp_splitA+0x30>
 54a:	16 16       	cp	r1, r22
 54c:	17 06       	cpc	r1, r23
 54e:	18 06       	cpc	r1, r24
 550:	99 1f       	adc	r25, r25
 552:	f1 cf       	rjmp	.-30     	; 0x536 <__fp_splitA+0xc>
 554:	86 95       	lsr	r24
 556:	71 05       	cpc	r23, r1
 558:	61 05       	cpc	r22, r1
 55a:	08 94       	sec
 55c:	08 95       	ret

0000055e <__fp_zero>:
 55e:	e8 94       	clt

00000560 <__fp_szero>:
 560:	bb 27       	eor	r27, r27
 562:	66 27       	eor	r22, r22
 564:	77 27       	eor	r23, r23
 566:	cb 01       	movw	r24, r22
 568:	97 f9       	bld	r25, 7
 56a:	08 95       	ret

0000056c <__mulsf3>:
 56c:	0e 94 c9 02 	call	0x592	; 0x592 <__mulsf3x>
 570:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__fp_round>
 574:	0e 94 6e 02 	call	0x4dc	; 0x4dc <__fp_pscA>
 578:	38 f0       	brcs	.+14     	; 0x588 <__mulsf3+0x1c>
 57a:	0e 94 75 02 	call	0x4ea	; 0x4ea <__fp_pscB>
 57e:	20 f0       	brcs	.+8      	; 0x588 <__mulsf3+0x1c>
 580:	95 23       	and	r25, r21
 582:	11 f0       	breq	.+4      	; 0x588 <__mulsf3+0x1c>
 584:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__fp_inf>
 588:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <__fp_nan>
 58c:	11 24       	eor	r1, r1
 58e:	0c 94 b0 02 	jmp	0x560	; 0x560 <__fp_szero>

00000592 <__mulsf3x>:
 592:	0e 94 8d 02 	call	0x51a	; 0x51a <__fp_split3>
 596:	70 f3       	brcs	.-36     	; 0x574 <__mulsf3+0x8>

00000598 <__mulsf3_pse>:
 598:	95 9f       	mul	r25, r21
 59a:	c1 f3       	breq	.-16     	; 0x58c <__mulsf3+0x20>
 59c:	95 0f       	add	r25, r21
 59e:	50 e0       	ldi	r21, 0x00	; 0
 5a0:	55 1f       	adc	r21, r21
 5a2:	62 9f       	mul	r22, r18
 5a4:	f0 01       	movw	r30, r0
 5a6:	72 9f       	mul	r23, r18
 5a8:	bb 27       	eor	r27, r27
 5aa:	f0 0d       	add	r31, r0
 5ac:	b1 1d       	adc	r27, r1
 5ae:	63 9f       	mul	r22, r19
 5b0:	aa 27       	eor	r26, r26
 5b2:	f0 0d       	add	r31, r0
 5b4:	b1 1d       	adc	r27, r1
 5b6:	aa 1f       	adc	r26, r26
 5b8:	64 9f       	mul	r22, r20
 5ba:	66 27       	eor	r22, r22
 5bc:	b0 0d       	add	r27, r0
 5be:	a1 1d       	adc	r26, r1
 5c0:	66 1f       	adc	r22, r22
 5c2:	82 9f       	mul	r24, r18
 5c4:	22 27       	eor	r18, r18
 5c6:	b0 0d       	add	r27, r0
 5c8:	a1 1d       	adc	r26, r1
 5ca:	62 1f       	adc	r22, r18
 5cc:	73 9f       	mul	r23, r19
 5ce:	b0 0d       	add	r27, r0
 5d0:	a1 1d       	adc	r26, r1
 5d2:	62 1f       	adc	r22, r18
 5d4:	83 9f       	mul	r24, r19
 5d6:	a0 0d       	add	r26, r0
 5d8:	61 1d       	adc	r22, r1
 5da:	22 1f       	adc	r18, r18
 5dc:	74 9f       	mul	r23, r20
 5de:	33 27       	eor	r19, r19
 5e0:	a0 0d       	add	r26, r0
 5e2:	61 1d       	adc	r22, r1
 5e4:	23 1f       	adc	r18, r19
 5e6:	84 9f       	mul	r24, r20
 5e8:	60 0d       	add	r22, r0
 5ea:	21 1d       	adc	r18, r1
 5ec:	82 2f       	mov	r24, r18
 5ee:	76 2f       	mov	r23, r22
 5f0:	6a 2f       	mov	r22, r26
 5f2:	11 24       	eor	r1, r1
 5f4:	9f 57       	subi	r25, 0x7F	; 127
 5f6:	50 40       	sbci	r21, 0x00	; 0
 5f8:	9a f0       	brmi	.+38     	; 0x620 <__mulsf3_pse+0x88>
 5fa:	f1 f0       	breq	.+60     	; 0x638 <__mulsf3_pse+0xa0>
 5fc:	88 23       	and	r24, r24
 5fe:	4a f0       	brmi	.+18     	; 0x612 <__mulsf3_pse+0x7a>
 600:	ee 0f       	add	r30, r30
 602:	ff 1f       	adc	r31, r31
 604:	bb 1f       	adc	r27, r27
 606:	66 1f       	adc	r22, r22
 608:	77 1f       	adc	r23, r23
 60a:	88 1f       	adc	r24, r24
 60c:	91 50       	subi	r25, 0x01	; 1
 60e:	50 40       	sbci	r21, 0x00	; 0
 610:	a9 f7       	brne	.-22     	; 0x5fc <__mulsf3_pse+0x64>
 612:	9e 3f       	cpi	r25, 0xFE	; 254
 614:	51 05       	cpc	r21, r1
 616:	80 f0       	brcs	.+32     	; 0x638 <__mulsf3_pse+0xa0>
 618:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__fp_inf>
 61c:	0c 94 b0 02 	jmp	0x560	; 0x560 <__fp_szero>
 620:	5f 3f       	cpi	r21, 0xFF	; 255
 622:	e4 f3       	brlt	.-8      	; 0x61c <__mulsf3_pse+0x84>
 624:	98 3e       	cpi	r25, 0xE8	; 232
 626:	d4 f3       	brlt	.-12     	; 0x61c <__mulsf3_pse+0x84>
 628:	86 95       	lsr	r24
 62a:	77 95       	ror	r23
 62c:	67 95       	ror	r22
 62e:	b7 95       	ror	r27
 630:	f7 95       	ror	r31
 632:	e7 95       	ror	r30
 634:	9f 5f       	subi	r25, 0xFF	; 255
 636:	c1 f7       	brne	.-16     	; 0x628 <__mulsf3_pse+0x90>
 638:	fe 2b       	or	r31, r30
 63a:	88 0f       	add	r24, r24
 63c:	91 1d       	adc	r25, r1
 63e:	96 95       	lsr	r25
 640:	87 95       	ror	r24
 642:	97 f9       	bld	r25, 7
 644:	08 95       	ret

00000646 <sprintf>:
 646:	ae e0       	ldi	r26, 0x0E	; 14
 648:	b0 e0       	ldi	r27, 0x00	; 0
 64a:	e9 e2       	ldi	r30, 0x29	; 41
 64c:	f3 e0       	ldi	r31, 0x03	; 3
 64e:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__prologue_saves__+0x1c>
 652:	0d 89       	ldd	r16, Y+21	; 0x15
 654:	1e 89       	ldd	r17, Y+22	; 0x16
 656:	86 e0       	ldi	r24, 0x06	; 6
 658:	8c 83       	std	Y+4, r24	; 0x04
 65a:	1a 83       	std	Y+2, r17	; 0x02
 65c:	09 83       	std	Y+1, r16	; 0x01
 65e:	8f ef       	ldi	r24, 0xFF	; 255
 660:	9f e7       	ldi	r25, 0x7F	; 127
 662:	9e 83       	std	Y+6, r25	; 0x06
 664:	8d 83       	std	Y+5, r24	; 0x05
 666:	ae 01       	movw	r20, r28
 668:	47 5e       	subi	r20, 0xE7	; 231
 66a:	5f 4f       	sbci	r21, 0xFF	; 255
 66c:	6f 89       	ldd	r22, Y+23	; 0x17
 66e:	78 8d       	ldd	r23, Y+24	; 0x18
 670:	ce 01       	movw	r24, r28
 672:	01 96       	adiw	r24, 0x01	; 1
 674:	0e 94 45 03 	call	0x68a	; 0x68a <vfprintf>
 678:	ef 81       	ldd	r30, Y+7	; 0x07
 67a:	f8 85       	ldd	r31, Y+8	; 0x08
 67c:	e0 0f       	add	r30, r16
 67e:	f1 1f       	adc	r31, r17
 680:	10 82       	st	Z, r1
 682:	2e 96       	adiw	r28, 0x0e	; 14
 684:	e4 e0       	ldi	r30, 0x04	; 4
 686:	0c 94 00 06 	jmp	0xc00	; 0xc00 <__epilogue_restores__+0x1c>

0000068a <vfprintf>:
 68a:	ab e0       	ldi	r26, 0x0B	; 11
 68c:	b0 e0       	ldi	r27, 0x00	; 0
 68e:	eb e4       	ldi	r30, 0x4B	; 75
 690:	f3 e0       	ldi	r31, 0x03	; 3
 692:	0c 94 d6 05 	jmp	0xbac	; 0xbac <__prologue_saves__>
 696:	6c 01       	movw	r12, r24
 698:	7b 01       	movw	r14, r22
 69a:	8a 01       	movw	r16, r20
 69c:	fc 01       	movw	r30, r24
 69e:	17 82       	std	Z+7, r1	; 0x07
 6a0:	16 82       	std	Z+6, r1	; 0x06
 6a2:	83 81       	ldd	r24, Z+3	; 0x03
 6a4:	81 ff       	sbrs	r24, 1
 6a6:	cc c1       	rjmp	.+920    	; 0xa40 <__stack+0x141>
 6a8:	ce 01       	movw	r24, r28
 6aa:	01 96       	adiw	r24, 0x01	; 1
 6ac:	3c 01       	movw	r6, r24
 6ae:	f6 01       	movw	r30, r12
 6b0:	93 81       	ldd	r25, Z+3	; 0x03
 6b2:	f7 01       	movw	r30, r14
 6b4:	93 fd       	sbrc	r25, 3
 6b6:	85 91       	lpm	r24, Z+
 6b8:	93 ff       	sbrs	r25, 3
 6ba:	81 91       	ld	r24, Z+
 6bc:	7f 01       	movw	r14, r30
 6be:	88 23       	and	r24, r24
 6c0:	09 f4       	brne	.+2      	; 0x6c4 <vfprintf+0x3a>
 6c2:	ba c1       	rjmp	.+884    	; 0xa38 <__stack+0x139>
 6c4:	85 32       	cpi	r24, 0x25	; 37
 6c6:	39 f4       	brne	.+14     	; 0x6d6 <vfprintf+0x4c>
 6c8:	93 fd       	sbrc	r25, 3
 6ca:	85 91       	lpm	r24, Z+
 6cc:	93 ff       	sbrs	r25, 3
 6ce:	81 91       	ld	r24, Z+
 6d0:	7f 01       	movw	r14, r30
 6d2:	85 32       	cpi	r24, 0x25	; 37
 6d4:	29 f4       	brne	.+10     	; 0x6e0 <vfprintf+0x56>
 6d6:	b6 01       	movw	r22, r12
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	0e 94 3c 05 	call	0xa78	; 0xa78 <fputc>
 6de:	e7 cf       	rjmp	.-50     	; 0x6ae <vfprintf+0x24>
 6e0:	91 2c       	mov	r9, r1
 6e2:	21 2c       	mov	r2, r1
 6e4:	31 2c       	mov	r3, r1
 6e6:	ff e1       	ldi	r31, 0x1F	; 31
 6e8:	f3 15       	cp	r31, r3
 6ea:	d8 f0       	brcs	.+54     	; 0x722 <vfprintf+0x98>
 6ec:	8b 32       	cpi	r24, 0x2B	; 43
 6ee:	79 f0       	breq	.+30     	; 0x70e <vfprintf+0x84>
 6f0:	38 f4       	brcc	.+14     	; 0x700 <vfprintf+0x76>
 6f2:	80 32       	cpi	r24, 0x20	; 32
 6f4:	79 f0       	breq	.+30     	; 0x714 <vfprintf+0x8a>
 6f6:	83 32       	cpi	r24, 0x23	; 35
 6f8:	a1 f4       	brne	.+40     	; 0x722 <vfprintf+0x98>
 6fa:	23 2d       	mov	r18, r3
 6fc:	20 61       	ori	r18, 0x10	; 16
 6fe:	1d c0       	rjmp	.+58     	; 0x73a <vfprintf+0xb0>
 700:	8d 32       	cpi	r24, 0x2D	; 45
 702:	61 f0       	breq	.+24     	; 0x71c <vfprintf+0x92>
 704:	80 33       	cpi	r24, 0x30	; 48
 706:	69 f4       	brne	.+26     	; 0x722 <vfprintf+0x98>
 708:	23 2d       	mov	r18, r3
 70a:	21 60       	ori	r18, 0x01	; 1
 70c:	16 c0       	rjmp	.+44     	; 0x73a <vfprintf+0xb0>
 70e:	83 2d       	mov	r24, r3
 710:	82 60       	ori	r24, 0x02	; 2
 712:	38 2e       	mov	r3, r24
 714:	e3 2d       	mov	r30, r3
 716:	e4 60       	ori	r30, 0x04	; 4
 718:	3e 2e       	mov	r3, r30
 71a:	2a c0       	rjmp	.+84     	; 0x770 <vfprintf+0xe6>
 71c:	f3 2d       	mov	r31, r3
 71e:	f8 60       	ori	r31, 0x08	; 8
 720:	1d c0       	rjmp	.+58     	; 0x75c <vfprintf+0xd2>
 722:	37 fc       	sbrc	r3, 7
 724:	2d c0       	rjmp	.+90     	; 0x780 <vfprintf+0xf6>
 726:	20 ed       	ldi	r18, 0xD0	; 208
 728:	28 0f       	add	r18, r24
 72a:	2a 30       	cpi	r18, 0x0A	; 10
 72c:	40 f0       	brcs	.+16     	; 0x73e <vfprintf+0xb4>
 72e:	8e 32       	cpi	r24, 0x2E	; 46
 730:	b9 f4       	brne	.+46     	; 0x760 <vfprintf+0xd6>
 732:	36 fc       	sbrc	r3, 6
 734:	81 c1       	rjmp	.+770    	; 0xa38 <__stack+0x139>
 736:	23 2d       	mov	r18, r3
 738:	20 64       	ori	r18, 0x40	; 64
 73a:	32 2e       	mov	r3, r18
 73c:	19 c0       	rjmp	.+50     	; 0x770 <vfprintf+0xe6>
 73e:	36 fe       	sbrs	r3, 6
 740:	06 c0       	rjmp	.+12     	; 0x74e <vfprintf+0xc4>
 742:	8a e0       	ldi	r24, 0x0A	; 10
 744:	98 9e       	mul	r9, r24
 746:	20 0d       	add	r18, r0
 748:	11 24       	eor	r1, r1
 74a:	92 2e       	mov	r9, r18
 74c:	11 c0       	rjmp	.+34     	; 0x770 <vfprintf+0xe6>
 74e:	ea e0       	ldi	r30, 0x0A	; 10
 750:	2e 9e       	mul	r2, r30
 752:	20 0d       	add	r18, r0
 754:	11 24       	eor	r1, r1
 756:	22 2e       	mov	r2, r18
 758:	f3 2d       	mov	r31, r3
 75a:	f0 62       	ori	r31, 0x20	; 32
 75c:	3f 2e       	mov	r3, r31
 75e:	08 c0       	rjmp	.+16     	; 0x770 <vfprintf+0xe6>
 760:	8c 36       	cpi	r24, 0x6C	; 108
 762:	21 f4       	brne	.+8      	; 0x76c <vfprintf+0xe2>
 764:	83 2d       	mov	r24, r3
 766:	80 68       	ori	r24, 0x80	; 128
 768:	38 2e       	mov	r3, r24
 76a:	02 c0       	rjmp	.+4      	; 0x770 <vfprintf+0xe6>
 76c:	88 36       	cpi	r24, 0x68	; 104
 76e:	41 f4       	brne	.+16     	; 0x780 <vfprintf+0xf6>
 770:	f7 01       	movw	r30, r14
 772:	93 fd       	sbrc	r25, 3
 774:	85 91       	lpm	r24, Z+
 776:	93 ff       	sbrs	r25, 3
 778:	81 91       	ld	r24, Z+
 77a:	7f 01       	movw	r14, r30
 77c:	81 11       	cpse	r24, r1
 77e:	b3 cf       	rjmp	.-154    	; 0x6e6 <vfprintf+0x5c>
 780:	98 2f       	mov	r25, r24
 782:	9f 7d       	andi	r25, 0xDF	; 223
 784:	95 54       	subi	r25, 0x45	; 69
 786:	93 30       	cpi	r25, 0x03	; 3
 788:	28 f4       	brcc	.+10     	; 0x794 <vfprintf+0x10a>
 78a:	0c 5f       	subi	r16, 0xFC	; 252
 78c:	1f 4f       	sbci	r17, 0xFF	; 255
 78e:	9f e3       	ldi	r25, 0x3F	; 63
 790:	99 83       	std	Y+1, r25	; 0x01
 792:	0d c0       	rjmp	.+26     	; 0x7ae <vfprintf+0x124>
 794:	83 36       	cpi	r24, 0x63	; 99
 796:	31 f0       	breq	.+12     	; 0x7a4 <vfprintf+0x11a>
 798:	83 37       	cpi	r24, 0x73	; 115
 79a:	71 f0       	breq	.+28     	; 0x7b8 <vfprintf+0x12e>
 79c:	83 35       	cpi	r24, 0x53	; 83
 79e:	09 f0       	breq	.+2      	; 0x7a2 <vfprintf+0x118>
 7a0:	59 c0       	rjmp	.+178    	; 0x854 <vfprintf+0x1ca>
 7a2:	21 c0       	rjmp	.+66     	; 0x7e6 <vfprintf+0x15c>
 7a4:	f8 01       	movw	r30, r16
 7a6:	80 81       	ld	r24, Z
 7a8:	89 83       	std	Y+1, r24	; 0x01
 7aa:	0e 5f       	subi	r16, 0xFE	; 254
 7ac:	1f 4f       	sbci	r17, 0xFF	; 255
 7ae:	88 24       	eor	r8, r8
 7b0:	83 94       	inc	r8
 7b2:	91 2c       	mov	r9, r1
 7b4:	53 01       	movw	r10, r6
 7b6:	13 c0       	rjmp	.+38     	; 0x7de <vfprintf+0x154>
 7b8:	28 01       	movw	r4, r16
 7ba:	f2 e0       	ldi	r31, 0x02	; 2
 7bc:	4f 0e       	add	r4, r31
 7be:	51 1c       	adc	r5, r1
 7c0:	f8 01       	movw	r30, r16
 7c2:	a0 80       	ld	r10, Z
 7c4:	b1 80       	ldd	r11, Z+1	; 0x01
 7c6:	36 fe       	sbrs	r3, 6
 7c8:	03 c0       	rjmp	.+6      	; 0x7d0 <vfprintf+0x146>
 7ca:	69 2d       	mov	r22, r9
 7cc:	70 e0       	ldi	r23, 0x00	; 0
 7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <vfprintf+0x14a>
 7d0:	6f ef       	ldi	r22, 0xFF	; 255
 7d2:	7f ef       	ldi	r23, 0xFF	; 255
 7d4:	c5 01       	movw	r24, r10
 7d6:	0e 94 31 05 	call	0xa62	; 0xa62 <strnlen>
 7da:	4c 01       	movw	r8, r24
 7dc:	82 01       	movw	r16, r4
 7de:	f3 2d       	mov	r31, r3
 7e0:	ff 77       	andi	r31, 0x7F	; 127
 7e2:	3f 2e       	mov	r3, r31
 7e4:	16 c0       	rjmp	.+44     	; 0x812 <vfprintf+0x188>
 7e6:	28 01       	movw	r4, r16
 7e8:	22 e0       	ldi	r18, 0x02	; 2
 7ea:	42 0e       	add	r4, r18
 7ec:	51 1c       	adc	r5, r1
 7ee:	f8 01       	movw	r30, r16
 7f0:	a0 80       	ld	r10, Z
 7f2:	b1 80       	ldd	r11, Z+1	; 0x01
 7f4:	36 fe       	sbrs	r3, 6
 7f6:	03 c0       	rjmp	.+6      	; 0x7fe <vfprintf+0x174>
 7f8:	69 2d       	mov	r22, r9
 7fa:	70 e0       	ldi	r23, 0x00	; 0
 7fc:	02 c0       	rjmp	.+4      	; 0x802 <vfprintf+0x178>
 7fe:	6f ef       	ldi	r22, 0xFF	; 255
 800:	7f ef       	ldi	r23, 0xFF	; 255
 802:	c5 01       	movw	r24, r10
 804:	0e 94 26 05 	call	0xa4c	; 0xa4c <strnlen_P>
 808:	4c 01       	movw	r8, r24
 80a:	f3 2d       	mov	r31, r3
 80c:	f0 68       	ori	r31, 0x80	; 128
 80e:	3f 2e       	mov	r3, r31
 810:	82 01       	movw	r16, r4
 812:	33 fc       	sbrc	r3, 3
 814:	1b c0       	rjmp	.+54     	; 0x84c <vfprintf+0x1c2>
 816:	82 2d       	mov	r24, r2
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	88 16       	cp	r8, r24
 81c:	99 06       	cpc	r9, r25
 81e:	b0 f4       	brcc	.+44     	; 0x84c <vfprintf+0x1c2>
 820:	b6 01       	movw	r22, r12
 822:	80 e2       	ldi	r24, 0x20	; 32
 824:	90 e0       	ldi	r25, 0x00	; 0
 826:	0e 94 3c 05 	call	0xa78	; 0xa78 <fputc>
 82a:	2a 94       	dec	r2
 82c:	f4 cf       	rjmp	.-24     	; 0x816 <vfprintf+0x18c>
 82e:	f5 01       	movw	r30, r10
 830:	37 fc       	sbrc	r3, 7
 832:	85 91       	lpm	r24, Z+
 834:	37 fe       	sbrs	r3, 7
 836:	81 91       	ld	r24, Z+
 838:	5f 01       	movw	r10, r30
 83a:	b6 01       	movw	r22, r12
 83c:	90 e0       	ldi	r25, 0x00	; 0
 83e:	0e 94 3c 05 	call	0xa78	; 0xa78 <fputc>
 842:	21 10       	cpse	r2, r1
 844:	2a 94       	dec	r2
 846:	21 e0       	ldi	r18, 0x01	; 1
 848:	82 1a       	sub	r8, r18
 84a:	91 08       	sbc	r9, r1
 84c:	81 14       	cp	r8, r1
 84e:	91 04       	cpc	r9, r1
 850:	71 f7       	brne	.-36     	; 0x82e <vfprintf+0x1a4>
 852:	e8 c0       	rjmp	.+464    	; 0xa24 <__stack+0x125>
 854:	84 36       	cpi	r24, 0x64	; 100
 856:	11 f0       	breq	.+4      	; 0x85c <vfprintf+0x1d2>
 858:	89 36       	cpi	r24, 0x69	; 105
 85a:	41 f5       	brne	.+80     	; 0x8ac <vfprintf+0x222>
 85c:	f8 01       	movw	r30, r16
 85e:	37 fe       	sbrs	r3, 7
 860:	07 c0       	rjmp	.+14     	; 0x870 <vfprintf+0x1e6>
 862:	60 81       	ld	r22, Z
 864:	71 81       	ldd	r23, Z+1	; 0x01
 866:	82 81       	ldd	r24, Z+2	; 0x02
 868:	93 81       	ldd	r25, Z+3	; 0x03
 86a:	0c 5f       	subi	r16, 0xFC	; 252
 86c:	1f 4f       	sbci	r17, 0xFF	; 255
 86e:	08 c0       	rjmp	.+16     	; 0x880 <vfprintf+0x1f6>
 870:	60 81       	ld	r22, Z
 872:	71 81       	ldd	r23, Z+1	; 0x01
 874:	07 2e       	mov	r0, r23
 876:	00 0c       	add	r0, r0
 878:	88 0b       	sbc	r24, r24
 87a:	99 0b       	sbc	r25, r25
 87c:	0e 5f       	subi	r16, 0xFE	; 254
 87e:	1f 4f       	sbci	r17, 0xFF	; 255
 880:	f3 2d       	mov	r31, r3
 882:	ff 76       	andi	r31, 0x6F	; 111
 884:	3f 2e       	mov	r3, r31
 886:	97 ff       	sbrs	r25, 7
 888:	09 c0       	rjmp	.+18     	; 0x89c <vfprintf+0x212>
 88a:	90 95       	com	r25
 88c:	80 95       	com	r24
 88e:	70 95       	com	r23
 890:	61 95       	neg	r22
 892:	7f 4f       	sbci	r23, 0xFF	; 255
 894:	8f 4f       	sbci	r24, 0xFF	; 255
 896:	9f 4f       	sbci	r25, 0xFF	; 255
 898:	f0 68       	ori	r31, 0x80	; 128
 89a:	3f 2e       	mov	r3, r31
 89c:	2a e0       	ldi	r18, 0x0A	; 10
 89e:	30 e0       	ldi	r19, 0x00	; 0
 8a0:	a3 01       	movw	r20, r6
 8a2:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__ultoa_invert>
 8a6:	88 2e       	mov	r8, r24
 8a8:	86 18       	sub	r8, r6
 8aa:	45 c0       	rjmp	.+138    	; 0x936 <__stack+0x37>
 8ac:	85 37       	cpi	r24, 0x75	; 117
 8ae:	31 f4       	brne	.+12     	; 0x8bc <vfprintf+0x232>
 8b0:	23 2d       	mov	r18, r3
 8b2:	2f 7e       	andi	r18, 0xEF	; 239
 8b4:	b2 2e       	mov	r11, r18
 8b6:	2a e0       	ldi	r18, 0x0A	; 10
 8b8:	30 e0       	ldi	r19, 0x00	; 0
 8ba:	25 c0       	rjmp	.+74     	; 0x906 <__stack+0x7>
 8bc:	93 2d       	mov	r25, r3
 8be:	99 7f       	andi	r25, 0xF9	; 249
 8c0:	b9 2e       	mov	r11, r25
 8c2:	8f 36       	cpi	r24, 0x6F	; 111
 8c4:	c1 f0       	breq	.+48     	; 0x8f6 <vfprintf+0x26c>
 8c6:	18 f4       	brcc	.+6      	; 0x8ce <vfprintf+0x244>
 8c8:	88 35       	cpi	r24, 0x58	; 88
 8ca:	79 f0       	breq	.+30     	; 0x8ea <vfprintf+0x260>
 8cc:	b5 c0       	rjmp	.+362    	; 0xa38 <__stack+0x139>
 8ce:	80 37       	cpi	r24, 0x70	; 112
 8d0:	19 f0       	breq	.+6      	; 0x8d8 <vfprintf+0x24e>
 8d2:	88 37       	cpi	r24, 0x78	; 120
 8d4:	21 f0       	breq	.+8      	; 0x8de <vfprintf+0x254>
 8d6:	b0 c0       	rjmp	.+352    	; 0xa38 <__stack+0x139>
 8d8:	e9 2f       	mov	r30, r25
 8da:	e0 61       	ori	r30, 0x10	; 16
 8dc:	be 2e       	mov	r11, r30
 8de:	b4 fe       	sbrs	r11, 4
 8e0:	0d c0       	rjmp	.+26     	; 0x8fc <vfprintf+0x272>
 8e2:	fb 2d       	mov	r31, r11
 8e4:	f4 60       	ori	r31, 0x04	; 4
 8e6:	bf 2e       	mov	r11, r31
 8e8:	09 c0       	rjmp	.+18     	; 0x8fc <vfprintf+0x272>
 8ea:	34 fe       	sbrs	r3, 4
 8ec:	0a c0       	rjmp	.+20     	; 0x902 <__stack+0x3>
 8ee:	29 2f       	mov	r18, r25
 8f0:	26 60       	ori	r18, 0x06	; 6
 8f2:	b2 2e       	mov	r11, r18
 8f4:	06 c0       	rjmp	.+12     	; 0x902 <__stack+0x3>
 8f6:	28 e0       	ldi	r18, 0x08	; 8
 8f8:	30 e0       	ldi	r19, 0x00	; 0
 8fa:	05 c0       	rjmp	.+10     	; 0x906 <__stack+0x7>
 8fc:	20 e1       	ldi	r18, 0x10	; 16
 8fe:	30 e0       	ldi	r19, 0x00	; 0
 900:	02 c0       	rjmp	.+4      	; 0x906 <__stack+0x7>
 902:	20 e1       	ldi	r18, 0x10	; 16
 904:	32 e0       	ldi	r19, 0x02	; 2
 906:	f8 01       	movw	r30, r16
 908:	b7 fe       	sbrs	r11, 7
 90a:	07 c0       	rjmp	.+14     	; 0x91a <__stack+0x1b>
 90c:	60 81       	ld	r22, Z
 90e:	71 81       	ldd	r23, Z+1	; 0x01
 910:	82 81       	ldd	r24, Z+2	; 0x02
 912:	93 81       	ldd	r25, Z+3	; 0x03
 914:	0c 5f       	subi	r16, 0xFC	; 252
 916:	1f 4f       	sbci	r17, 0xFF	; 255
 918:	06 c0       	rjmp	.+12     	; 0x926 <__stack+0x27>
 91a:	60 81       	ld	r22, Z
 91c:	71 81       	ldd	r23, Z+1	; 0x01
 91e:	80 e0       	ldi	r24, 0x00	; 0
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	0e 5f       	subi	r16, 0xFE	; 254
 924:	1f 4f       	sbci	r17, 0xFF	; 255
 926:	a3 01       	movw	r20, r6
 928:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__ultoa_invert>
 92c:	88 2e       	mov	r8, r24
 92e:	86 18       	sub	r8, r6
 930:	fb 2d       	mov	r31, r11
 932:	ff 77       	andi	r31, 0x7F	; 127
 934:	3f 2e       	mov	r3, r31
 936:	36 fe       	sbrs	r3, 6
 938:	0d c0       	rjmp	.+26     	; 0x954 <__stack+0x55>
 93a:	23 2d       	mov	r18, r3
 93c:	2e 7f       	andi	r18, 0xFE	; 254
 93e:	a2 2e       	mov	r10, r18
 940:	89 14       	cp	r8, r9
 942:	58 f4       	brcc	.+22     	; 0x95a <__stack+0x5b>
 944:	34 fe       	sbrs	r3, 4
 946:	0b c0       	rjmp	.+22     	; 0x95e <__stack+0x5f>
 948:	32 fc       	sbrc	r3, 2
 94a:	09 c0       	rjmp	.+18     	; 0x95e <__stack+0x5f>
 94c:	83 2d       	mov	r24, r3
 94e:	8e 7e       	andi	r24, 0xEE	; 238
 950:	a8 2e       	mov	r10, r24
 952:	05 c0       	rjmp	.+10     	; 0x95e <__stack+0x5f>
 954:	b8 2c       	mov	r11, r8
 956:	a3 2c       	mov	r10, r3
 958:	03 c0       	rjmp	.+6      	; 0x960 <__stack+0x61>
 95a:	b8 2c       	mov	r11, r8
 95c:	01 c0       	rjmp	.+2      	; 0x960 <__stack+0x61>
 95e:	b9 2c       	mov	r11, r9
 960:	a4 fe       	sbrs	r10, 4
 962:	0f c0       	rjmp	.+30     	; 0x982 <__stack+0x83>
 964:	fe 01       	movw	r30, r28
 966:	e8 0d       	add	r30, r8
 968:	f1 1d       	adc	r31, r1
 96a:	80 81       	ld	r24, Z
 96c:	80 33       	cpi	r24, 0x30	; 48
 96e:	21 f4       	brne	.+8      	; 0x978 <__stack+0x79>
 970:	9a 2d       	mov	r25, r10
 972:	99 7e       	andi	r25, 0xE9	; 233
 974:	a9 2e       	mov	r10, r25
 976:	09 c0       	rjmp	.+18     	; 0x98a <__stack+0x8b>
 978:	a2 fe       	sbrs	r10, 2
 97a:	06 c0       	rjmp	.+12     	; 0x988 <__stack+0x89>
 97c:	b3 94       	inc	r11
 97e:	b3 94       	inc	r11
 980:	04 c0       	rjmp	.+8      	; 0x98a <__stack+0x8b>
 982:	8a 2d       	mov	r24, r10
 984:	86 78       	andi	r24, 0x86	; 134
 986:	09 f0       	breq	.+2      	; 0x98a <__stack+0x8b>
 988:	b3 94       	inc	r11
 98a:	a3 fc       	sbrc	r10, 3
 98c:	11 c0       	rjmp	.+34     	; 0x9b0 <__stack+0xb1>
 98e:	a0 fe       	sbrs	r10, 0
 990:	06 c0       	rjmp	.+12     	; 0x99e <__stack+0x9f>
 992:	b2 14       	cp	r11, r2
 994:	88 f4       	brcc	.+34     	; 0x9b8 <__stack+0xb9>
 996:	28 0c       	add	r2, r8
 998:	92 2c       	mov	r9, r2
 99a:	9b 18       	sub	r9, r11
 99c:	0e c0       	rjmp	.+28     	; 0x9ba <__stack+0xbb>
 99e:	b2 14       	cp	r11, r2
 9a0:	60 f4       	brcc	.+24     	; 0x9ba <__stack+0xbb>
 9a2:	b6 01       	movw	r22, r12
 9a4:	80 e2       	ldi	r24, 0x20	; 32
 9a6:	90 e0       	ldi	r25, 0x00	; 0
 9a8:	0e 94 3c 05 	call	0xa78	; 0xa78 <fputc>
 9ac:	b3 94       	inc	r11
 9ae:	f7 cf       	rjmp	.-18     	; 0x99e <__stack+0x9f>
 9b0:	b2 14       	cp	r11, r2
 9b2:	18 f4       	brcc	.+6      	; 0x9ba <__stack+0xbb>
 9b4:	2b 18       	sub	r2, r11
 9b6:	02 c0       	rjmp	.+4      	; 0x9bc <__stack+0xbd>
 9b8:	98 2c       	mov	r9, r8
 9ba:	21 2c       	mov	r2, r1
 9bc:	a4 fe       	sbrs	r10, 4
 9be:	10 c0       	rjmp	.+32     	; 0x9e0 <__stack+0xe1>
 9c0:	b6 01       	movw	r22, r12
 9c2:	80 e3       	ldi	r24, 0x30	; 48
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	0e 94 3c 05 	call	0xa78	; 0xa78 <fputc>
 9ca:	a2 fe       	sbrs	r10, 2
 9cc:	17 c0       	rjmp	.+46     	; 0x9fc <__stack+0xfd>
 9ce:	a1 fc       	sbrc	r10, 1
 9d0:	03 c0       	rjmp	.+6      	; 0x9d8 <__stack+0xd9>
 9d2:	88 e7       	ldi	r24, 0x78	; 120
 9d4:	90 e0       	ldi	r25, 0x00	; 0
 9d6:	02 c0       	rjmp	.+4      	; 0x9dc <__stack+0xdd>
 9d8:	88 e5       	ldi	r24, 0x58	; 88
 9da:	90 e0       	ldi	r25, 0x00	; 0
 9dc:	b6 01       	movw	r22, r12
 9de:	0c c0       	rjmp	.+24     	; 0x9f8 <__stack+0xf9>
 9e0:	8a 2d       	mov	r24, r10
 9e2:	86 78       	andi	r24, 0x86	; 134
 9e4:	59 f0       	breq	.+22     	; 0x9fc <__stack+0xfd>
 9e6:	a1 fe       	sbrs	r10, 1
 9e8:	02 c0       	rjmp	.+4      	; 0x9ee <__stack+0xef>
 9ea:	8b e2       	ldi	r24, 0x2B	; 43
 9ec:	01 c0       	rjmp	.+2      	; 0x9f0 <__stack+0xf1>
 9ee:	80 e2       	ldi	r24, 0x20	; 32
 9f0:	a7 fc       	sbrc	r10, 7
 9f2:	8d e2       	ldi	r24, 0x2D	; 45
 9f4:	b6 01       	movw	r22, r12
 9f6:	90 e0       	ldi	r25, 0x00	; 0
 9f8:	0e 94 3c 05 	call	0xa78	; 0xa78 <fputc>
 9fc:	89 14       	cp	r8, r9
 9fe:	38 f4       	brcc	.+14     	; 0xa0e <__stack+0x10f>
 a00:	b6 01       	movw	r22, r12
 a02:	80 e3       	ldi	r24, 0x30	; 48
 a04:	90 e0       	ldi	r25, 0x00	; 0
 a06:	0e 94 3c 05 	call	0xa78	; 0xa78 <fputc>
 a0a:	9a 94       	dec	r9
 a0c:	f7 cf       	rjmp	.-18     	; 0x9fc <__stack+0xfd>
 a0e:	8a 94       	dec	r8
 a10:	f3 01       	movw	r30, r6
 a12:	e8 0d       	add	r30, r8
 a14:	f1 1d       	adc	r31, r1
 a16:	80 81       	ld	r24, Z
 a18:	b6 01       	movw	r22, r12
 a1a:	90 e0       	ldi	r25, 0x00	; 0
 a1c:	0e 94 3c 05 	call	0xa78	; 0xa78 <fputc>
 a20:	81 10       	cpse	r8, r1
 a22:	f5 cf       	rjmp	.-22     	; 0xa0e <__stack+0x10f>
 a24:	22 20       	and	r2, r2
 a26:	09 f4       	brne	.+2      	; 0xa2a <__stack+0x12b>
 a28:	42 ce       	rjmp	.-892    	; 0x6ae <vfprintf+0x24>
 a2a:	b6 01       	movw	r22, r12
 a2c:	80 e2       	ldi	r24, 0x20	; 32
 a2e:	90 e0       	ldi	r25, 0x00	; 0
 a30:	0e 94 3c 05 	call	0xa78	; 0xa78 <fputc>
 a34:	2a 94       	dec	r2
 a36:	f6 cf       	rjmp	.-20     	; 0xa24 <__stack+0x125>
 a38:	f6 01       	movw	r30, r12
 a3a:	86 81       	ldd	r24, Z+6	; 0x06
 a3c:	97 81       	ldd	r25, Z+7	; 0x07
 a3e:	02 c0       	rjmp	.+4      	; 0xa44 <__stack+0x145>
 a40:	8f ef       	ldi	r24, 0xFF	; 255
 a42:	9f ef       	ldi	r25, 0xFF	; 255
 a44:	2b 96       	adiw	r28, 0x0b	; 11
 a46:	e2 e1       	ldi	r30, 0x12	; 18
 a48:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__epilogue_restores__>

00000a4c <strnlen_P>:
 a4c:	fc 01       	movw	r30, r24
 a4e:	05 90       	lpm	r0, Z+
 a50:	61 50       	subi	r22, 0x01	; 1
 a52:	70 40       	sbci	r23, 0x00	; 0
 a54:	01 10       	cpse	r0, r1
 a56:	d8 f7       	brcc	.-10     	; 0xa4e <strnlen_P+0x2>
 a58:	80 95       	com	r24
 a5a:	90 95       	com	r25
 a5c:	8e 0f       	add	r24, r30
 a5e:	9f 1f       	adc	r25, r31
 a60:	08 95       	ret

00000a62 <strnlen>:
 a62:	fc 01       	movw	r30, r24
 a64:	61 50       	subi	r22, 0x01	; 1
 a66:	70 40       	sbci	r23, 0x00	; 0
 a68:	01 90       	ld	r0, Z+
 a6a:	01 10       	cpse	r0, r1
 a6c:	d8 f7       	brcc	.-10     	; 0xa64 <strnlen+0x2>
 a6e:	80 95       	com	r24
 a70:	90 95       	com	r25
 a72:	8e 0f       	add	r24, r30
 a74:	9f 1f       	adc	r25, r31
 a76:	08 95       	ret

00000a78 <fputc>:
 a78:	0f 93       	push	r16
 a7a:	1f 93       	push	r17
 a7c:	cf 93       	push	r28
 a7e:	df 93       	push	r29
 a80:	fb 01       	movw	r30, r22
 a82:	23 81       	ldd	r18, Z+3	; 0x03
 a84:	21 fd       	sbrc	r18, 1
 a86:	03 c0       	rjmp	.+6      	; 0xa8e <fputc+0x16>
 a88:	8f ef       	ldi	r24, 0xFF	; 255
 a8a:	9f ef       	ldi	r25, 0xFF	; 255
 a8c:	2c c0       	rjmp	.+88     	; 0xae6 <fputc+0x6e>
 a8e:	22 ff       	sbrs	r18, 2
 a90:	16 c0       	rjmp	.+44     	; 0xabe <fputc+0x46>
 a92:	46 81       	ldd	r20, Z+6	; 0x06
 a94:	57 81       	ldd	r21, Z+7	; 0x07
 a96:	24 81       	ldd	r18, Z+4	; 0x04
 a98:	35 81       	ldd	r19, Z+5	; 0x05
 a9a:	42 17       	cp	r20, r18
 a9c:	53 07       	cpc	r21, r19
 a9e:	44 f4       	brge	.+16     	; 0xab0 <fputc+0x38>
 aa0:	a0 81       	ld	r26, Z
 aa2:	b1 81       	ldd	r27, Z+1	; 0x01
 aa4:	9d 01       	movw	r18, r26
 aa6:	2f 5f       	subi	r18, 0xFF	; 255
 aa8:	3f 4f       	sbci	r19, 0xFF	; 255
 aaa:	31 83       	std	Z+1, r19	; 0x01
 aac:	20 83       	st	Z, r18
 aae:	8c 93       	st	X, r24
 ab0:	26 81       	ldd	r18, Z+6	; 0x06
 ab2:	37 81       	ldd	r19, Z+7	; 0x07
 ab4:	2f 5f       	subi	r18, 0xFF	; 255
 ab6:	3f 4f       	sbci	r19, 0xFF	; 255
 ab8:	37 83       	std	Z+7, r19	; 0x07
 aba:	26 83       	std	Z+6, r18	; 0x06
 abc:	14 c0       	rjmp	.+40     	; 0xae6 <fputc+0x6e>
 abe:	8b 01       	movw	r16, r22
 ac0:	ec 01       	movw	r28, r24
 ac2:	fb 01       	movw	r30, r22
 ac4:	00 84       	ldd	r0, Z+8	; 0x08
 ac6:	f1 85       	ldd	r31, Z+9	; 0x09
 ac8:	e0 2d       	mov	r30, r0
 aca:	09 95       	icall
 acc:	89 2b       	or	r24, r25
 ace:	e1 f6       	brne	.-72     	; 0xa88 <fputc+0x10>
 ad0:	d8 01       	movw	r26, r16
 ad2:	16 96       	adiw	r26, 0x06	; 6
 ad4:	8d 91       	ld	r24, X+
 ad6:	9c 91       	ld	r25, X
 ad8:	17 97       	sbiw	r26, 0x07	; 7
 ada:	01 96       	adiw	r24, 0x01	; 1
 adc:	17 96       	adiw	r26, 0x07	; 7
 ade:	9c 93       	st	X, r25
 ae0:	8e 93       	st	-X, r24
 ae2:	16 97       	sbiw	r26, 0x06	; 6
 ae4:	ce 01       	movw	r24, r28
 ae6:	df 91       	pop	r29
 ae8:	cf 91       	pop	r28
 aea:	1f 91       	pop	r17
 aec:	0f 91       	pop	r16
 aee:	08 95       	ret

00000af0 <__ultoa_invert>:
 af0:	fa 01       	movw	r30, r20
 af2:	aa 27       	eor	r26, r26
 af4:	28 30       	cpi	r18, 0x08	; 8
 af6:	51 f1       	breq	.+84     	; 0xb4c <__ultoa_invert+0x5c>
 af8:	20 31       	cpi	r18, 0x10	; 16
 afa:	81 f1       	breq	.+96     	; 0xb5c <__ultoa_invert+0x6c>
 afc:	e8 94       	clt
 afe:	6f 93       	push	r22
 b00:	6e 7f       	andi	r22, 0xFE	; 254
 b02:	6e 5f       	subi	r22, 0xFE	; 254
 b04:	7f 4f       	sbci	r23, 0xFF	; 255
 b06:	8f 4f       	sbci	r24, 0xFF	; 255
 b08:	9f 4f       	sbci	r25, 0xFF	; 255
 b0a:	af 4f       	sbci	r26, 0xFF	; 255
 b0c:	b1 e0       	ldi	r27, 0x01	; 1
 b0e:	3e d0       	rcall	.+124    	; 0xb8c <__ultoa_invert+0x9c>
 b10:	b4 e0       	ldi	r27, 0x04	; 4
 b12:	3c d0       	rcall	.+120    	; 0xb8c <__ultoa_invert+0x9c>
 b14:	67 0f       	add	r22, r23
 b16:	78 1f       	adc	r23, r24
 b18:	89 1f       	adc	r24, r25
 b1a:	9a 1f       	adc	r25, r26
 b1c:	a1 1d       	adc	r26, r1
 b1e:	68 0f       	add	r22, r24
 b20:	79 1f       	adc	r23, r25
 b22:	8a 1f       	adc	r24, r26
 b24:	91 1d       	adc	r25, r1
 b26:	a1 1d       	adc	r26, r1
 b28:	6a 0f       	add	r22, r26
 b2a:	71 1d       	adc	r23, r1
 b2c:	81 1d       	adc	r24, r1
 b2e:	91 1d       	adc	r25, r1
 b30:	a1 1d       	adc	r26, r1
 b32:	20 d0       	rcall	.+64     	; 0xb74 <__ultoa_invert+0x84>
 b34:	09 f4       	brne	.+2      	; 0xb38 <__ultoa_invert+0x48>
 b36:	68 94       	set
 b38:	3f 91       	pop	r19
 b3a:	2a e0       	ldi	r18, 0x0A	; 10
 b3c:	26 9f       	mul	r18, r22
 b3e:	11 24       	eor	r1, r1
 b40:	30 19       	sub	r19, r0
 b42:	30 5d       	subi	r19, 0xD0	; 208
 b44:	31 93       	st	Z+, r19
 b46:	de f6       	brtc	.-74     	; 0xafe <__ultoa_invert+0xe>
 b48:	cf 01       	movw	r24, r30
 b4a:	08 95       	ret
 b4c:	46 2f       	mov	r20, r22
 b4e:	47 70       	andi	r20, 0x07	; 7
 b50:	40 5d       	subi	r20, 0xD0	; 208
 b52:	41 93       	st	Z+, r20
 b54:	b3 e0       	ldi	r27, 0x03	; 3
 b56:	0f d0       	rcall	.+30     	; 0xb76 <__ultoa_invert+0x86>
 b58:	c9 f7       	brne	.-14     	; 0xb4c <__ultoa_invert+0x5c>
 b5a:	f6 cf       	rjmp	.-20     	; 0xb48 <__ultoa_invert+0x58>
 b5c:	46 2f       	mov	r20, r22
 b5e:	4f 70       	andi	r20, 0x0F	; 15
 b60:	40 5d       	subi	r20, 0xD0	; 208
 b62:	4a 33       	cpi	r20, 0x3A	; 58
 b64:	18 f0       	brcs	.+6      	; 0xb6c <__ultoa_invert+0x7c>
 b66:	49 5d       	subi	r20, 0xD9	; 217
 b68:	31 fd       	sbrc	r19, 1
 b6a:	40 52       	subi	r20, 0x20	; 32
 b6c:	41 93       	st	Z+, r20
 b6e:	02 d0       	rcall	.+4      	; 0xb74 <__ultoa_invert+0x84>
 b70:	a9 f7       	brne	.-22     	; 0xb5c <__ultoa_invert+0x6c>
 b72:	ea cf       	rjmp	.-44     	; 0xb48 <__ultoa_invert+0x58>
 b74:	b4 e0       	ldi	r27, 0x04	; 4
 b76:	a6 95       	lsr	r26
 b78:	97 95       	ror	r25
 b7a:	87 95       	ror	r24
 b7c:	77 95       	ror	r23
 b7e:	67 95       	ror	r22
 b80:	ba 95       	dec	r27
 b82:	c9 f7       	brne	.-14     	; 0xb76 <__ultoa_invert+0x86>
 b84:	00 97       	sbiw	r24, 0x00	; 0
 b86:	61 05       	cpc	r22, r1
 b88:	71 05       	cpc	r23, r1
 b8a:	08 95       	ret
 b8c:	9b 01       	movw	r18, r22
 b8e:	ac 01       	movw	r20, r24
 b90:	0a 2e       	mov	r0, r26
 b92:	06 94       	lsr	r0
 b94:	57 95       	ror	r21
 b96:	47 95       	ror	r20
 b98:	37 95       	ror	r19
 b9a:	27 95       	ror	r18
 b9c:	ba 95       	dec	r27
 b9e:	c9 f7       	brne	.-14     	; 0xb92 <__ultoa_invert+0xa2>
 ba0:	62 0f       	add	r22, r18
 ba2:	73 1f       	adc	r23, r19
 ba4:	84 1f       	adc	r24, r20
 ba6:	95 1f       	adc	r25, r21
 ba8:	a0 1d       	adc	r26, r0
 baa:	08 95       	ret

00000bac <__prologue_saves__>:
 bac:	2f 92       	push	r2
 bae:	3f 92       	push	r3
 bb0:	4f 92       	push	r4
 bb2:	5f 92       	push	r5
 bb4:	6f 92       	push	r6
 bb6:	7f 92       	push	r7
 bb8:	8f 92       	push	r8
 bba:	9f 92       	push	r9
 bbc:	af 92       	push	r10
 bbe:	bf 92       	push	r11
 bc0:	cf 92       	push	r12
 bc2:	df 92       	push	r13
 bc4:	ef 92       	push	r14
 bc6:	ff 92       	push	r15
 bc8:	0f 93       	push	r16
 bca:	1f 93       	push	r17
 bcc:	cf 93       	push	r28
 bce:	df 93       	push	r29
 bd0:	cd b7       	in	r28, 0x3d	; 61
 bd2:	de b7       	in	r29, 0x3e	; 62
 bd4:	ca 1b       	sub	r28, r26
 bd6:	db 0b       	sbc	r29, r27
 bd8:	0f b6       	in	r0, 0x3f	; 63
 bda:	f8 94       	cli
 bdc:	de bf       	out	0x3e, r29	; 62
 bde:	0f be       	out	0x3f, r0	; 63
 be0:	cd bf       	out	0x3d, r28	; 61
 be2:	09 94       	ijmp

00000be4 <__epilogue_restores__>:
 be4:	2a 88       	ldd	r2, Y+18	; 0x12
 be6:	39 88       	ldd	r3, Y+17	; 0x11
 be8:	48 88       	ldd	r4, Y+16	; 0x10
 bea:	5f 84       	ldd	r5, Y+15	; 0x0f
 bec:	6e 84       	ldd	r6, Y+14	; 0x0e
 bee:	7d 84       	ldd	r7, Y+13	; 0x0d
 bf0:	8c 84       	ldd	r8, Y+12	; 0x0c
 bf2:	9b 84       	ldd	r9, Y+11	; 0x0b
 bf4:	aa 84       	ldd	r10, Y+10	; 0x0a
 bf6:	b9 84       	ldd	r11, Y+9	; 0x09
 bf8:	c8 84       	ldd	r12, Y+8	; 0x08
 bfa:	df 80       	ldd	r13, Y+7	; 0x07
 bfc:	ee 80       	ldd	r14, Y+6	; 0x06
 bfe:	fd 80       	ldd	r15, Y+5	; 0x05
 c00:	0c 81       	ldd	r16, Y+4	; 0x04
 c02:	1b 81       	ldd	r17, Y+3	; 0x03
 c04:	aa 81       	ldd	r26, Y+2	; 0x02
 c06:	b9 81       	ldd	r27, Y+1	; 0x01
 c08:	ce 0f       	add	r28, r30
 c0a:	d1 1d       	adc	r29, r1
 c0c:	0f b6       	in	r0, 0x3f	; 63
 c0e:	f8 94       	cli
 c10:	de bf       	out	0x3e, r29	; 62
 c12:	0f be       	out	0x3f, r0	; 63
 c14:	cd bf       	out	0x3d, r28	; 61
 c16:	ed 01       	movw	r28, r26
 c18:	08 95       	ret

00000c1a <_exit>:
 c1a:	f8 94       	cli

00000c1c <__stop_program>:
 c1c:	ff cf       	rjmp	.-2      	; 0xc1c <__stop_program>
